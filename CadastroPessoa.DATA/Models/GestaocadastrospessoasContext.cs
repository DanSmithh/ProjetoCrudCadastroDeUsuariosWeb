// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace CadastroPessoa.DATA.Models
{
    public partial class GestaocadastrospessoasContext : DbContext
    {
        public GestaocadastrospessoasContext()
        {
        }

        public GestaocadastrospessoasContext(DbContextOptions<GestaocadastrospessoasContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Endereco> Endereco { get; set; }
        public virtual DbSet<Pessoa> Pessoa { get; set; }
        public virtual DbSet<PessoaTelefone> PessoaTelefone { get; set; }
        public virtual DbSet<Telefone> Telefone { get; set; }
        public virtual DbSet<TelefoneTipo> TelefoneTipo { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-2RP1P28\\SQLEXPRESS;Initial Catalog=GestaoCadastrosPessoas;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<Endereco>(entity =>
            {
                entity.Property(e => e.Bairro).IsFixedLength(true);

                entity.Property(e => e.Cidade).IsFixedLength(true);

                entity.Property(e => e.Estado).IsFixedLength(true);

                entity.Property(e => e.Longradouro).IsFixedLength(true);
            });

            modelBuilder.Entity<Pessoa>(entity =>
            {
                entity.Property(e => e.Cpf).IsFixedLength(true);

                entity.Property(e => e.Nome).IsFixedLength(true);

                entity.HasOne(d => d.EnderecoNavigation)
                    .WithMany(p => p.Pessoa)
                    .HasForeignKey(d => d.Endereco)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PESSOA_ENDERECO");
            });

            modelBuilder.Entity<PessoaTelefone>(entity =>
            {
                entity.Property(e => e.IdPessoaFk).ValueGeneratedNever();

                entity.HasOne(d => d.IdPessoaFkNavigation)
                    .WithOne(p => p.PessoaTelefone)
                    .HasForeignKey<PessoaTelefone>(d => d.IdPessoaFk)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PESSOA_TELEFONE_PESSOA1");

                entity.HasOne(d => d.IdTelefoneFkNavigation)
                    .WithMany(p => p.PessoaTelefone)
                    .HasForeignKey(d => d.IdTelefoneFk)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PESSOA_TELEFONE_TELEFONE1");
            });

            modelBuilder.Entity<Telefone>(entity =>
            {
                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.Telefone)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TELEFONE_TELEFONE_TIPO");
            });

            modelBuilder.Entity<TelefoneTipo>(entity =>
            {
                entity.Property(e => e.Tipo).IsFixedLength(true);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}